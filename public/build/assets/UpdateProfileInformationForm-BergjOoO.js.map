{"version":3,"file":"UpdateProfileInformationForm-BergjOoO.js","sources":["../../../resources/js/Pages/Profile/Partials/UpdateProfileInformationForm.vue"],"sourcesContent":["<script setup>\nimport { ref, computed, watch, onMounted, defineProps } from \"vue\";\nimport { Link, router, useForm, usePage } from \"@inertiajs/vue3\";\n\n// Define props\ndefineProps({\n    // No need for user prop since we're using usePage()\n});\nimport ActionMessage from \"@/Components/ActionMessage.vue\";\nimport FormSection from \"@/Components/FormSection.vue\";\nimport InputError from \"@/Components/InputError.vue\";\nimport InputLabel from \"@/Components/InputLabel.vue\";\nimport PrimaryButton from \"@/Components/PrimaryButton.vue\";\nimport SecondaryButton from \"@/Components/SecondaryButton.vue\";\nimport TextInput from \"@/Components/TextInput.vue\";\nimport Swal from \"sweetalert2\";\n\n// Access page props\nconst { props: pageProps } = usePage();\n\n// Access authenticated user data\nconst user = computed(() => pageProps?.auth?.user || null);\n\n// Access the profile and citizen data\nconst profile = computed(() => user.value?.profile || {});\nconst citizen = computed(() => user.value?.citizen || {});\n\n// Initialize form with default values and validation rules\nconst form = useForm({\n    _method: \"PUT\",\n    // User Profile Information\n    profile: {\n        // Personal Information\n        surname: '',\n        other_name: '',\n        email: '',\n        photo: null,\n        date_of_birth: \"\",\n        gender: \"\",\n        ncpwd_number: \"\",\n        ethnicity_id: \"\",\n        religion_id: \"\",\n        // Contact Information\n        telephone: \"\",\n        address_line_1: \"\",\n        address_line_2: \"\",\n        city: \"\",\n        state: \"\",\n        country: \"\"\n    },\n    // Citizen Information\n    citizen: {\n        // Identification Information\n        national_identification_number: \"\",\n        passport_number: \"\",\n        driver_license_number: \"\",\n        // Local Government Information\n        county_id: \"\",\n        sub_county_id: \"\",\n        constituency_id: \"\",\n        ward_id: \"\",\n        location_id: \"\",\n        village_id: \"\",\n        polling_center_id: \"\",\n        polling_station_id: \"\",\n        polling_stream_id: \"\"\n    }\n}, {\n    // Custom validation rules\n    resetOnSuccess: false,\n    rules: {\n        'citizen.national_identification_number': [\n            (value, form) => {\n                if (!value && !form.citizen.passport_number) {\n                    return \"Either National Identification Number or Passport Number is required\";\n                }\n                return true;\n            }\n        ],\n        'citizen.passport_number': [\n            (value, form) => {\n                if (!value && !form.citizen.national_identification_number) {\n                    return \"Either Passport Number or National Identification Number is required\";\n                }\n                return true;\n            }\n        ]\n    }\n});\n\n// OTP Configuration\nconst otpConfig = {\n    ttl: 300, // 5 minutes in seconds\n    rate_limit: 60, // 60 seconds between requests\n    attempts_limit: 5, // 5 attempts before OTP is invalidated\n};\n\n// OTP related state\nconst otpAttempts = ref(0);\nconst otpExpirationTime = ref(null);\nlet otpTimerInterval = null;\nconst otpVerificationInProgress = ref(false);\nconst showOtpModal = ref(false);\nconst otpForm = useForm({\n    otp: '',\n    field_to_verify: '',\n    verification_value: ''\n});\n\n// Format time remaining\nconst formatTimeRemaining = (endTime) => {\n    const now = new Date();\n    const diffInSeconds = Math.max(0, Math.floor((endTime - now) / 1000));\n    const minutes = Math.floor(diffInSeconds / 60);\n    const seconds = diffInSeconds % 60;\n    return {\n        formatted: `${minutes}:${seconds.toString().padStart(2, '0')}`,\n        isExpired: diffInSeconds <= 0\n    };\n};\n\n// Format phone number input\nconst formatPhoneNumber = (event) => {\n    // Remove all non-digit characters\n    let value = event.target.value.replace(/\\D/g, '');\n    \n    // Limit to 10 digits for Kenyan numbers\n    value = value.substring(0, 10);\n    \n    // Format as 0712 345 678\n    if (value.length > 6) {\n        value = value.replace(/^(\\d{3})(\\d{3})(\\d+)$/, '$1 $2 $3');\n    } else if (value.length > 3) {\n        value = value.replace(/^(\\d{3})(\\d+)$/, '$1 $2');\n    }\n    \n    // Update the form's telephone field\n    form.telephone = value;\n};\n\n// Clean up timer\nconst cleanupOtpTimer = () => {\n    if (otpTimerInterval) {\n        clearInterval(otpTimerInterval);\n        otpTimerInterval = null;\n    }\n};\n\n// Show OTP verification modal\nconst showOtpVerificationModal = () => {\n    // Track if resend is on cooldown\n    let isResendDisabled = false;\n    let resendCountdown = 0;\n    let countdownInterval = null;\n    \n    // Initialize or reuse existing expiration time\n    if (!otpExpirationTime.value) {\n        const expTime = new Date();\n        expTime.setSeconds(expTime.getSeconds() + otpConfig.ttl);\n        otpExpirationTime.value = expTime;\n    }\n    \n    // Clean up any existing timer\n    cleanupOtpTimer();\n\n    Swal.fire({\n        title: 'Verification Required',\n        html: `\n            <p class=\"mb-4\">We've sent a 6-digit verification code to your ${otpForm.field_to_verify === 'email' ? 'email' : 'phone number'}: <strong>${otpForm.new_value}</strong></p>\n            <p class=\"mb-4 text-sm text-gray-600\">\n                This code will expire in \n                <span id=\"otp-timer\" class=\"font-medium\">${formatTimeRemaining(otpExpirationTime.value).formatted}</span>\n            </p>\n            <div class=\"flex flex-col items-center\">\n                <input id=\"swal-otp-input\" class=\"swal2-input w-full text-center\" placeholder=\"Enter 6-digit code\" maxlength=\"6\" type=\"text\">\n                <div class=\"text-sm text-gray-500 mt-2\">\n                    Didn't receive the code?\n                    <button type=\"button\" id=\"resend-otp-btn\" class=\"text-green-600 hover:text-green-800\">Resend</button>\n                    <span id=\"resend-countdown\" class=\"hidden ml-1 text-gray-500\"></span>\n                </div>\n                <div class=\"text-xs text-gray-500 mt-1\">\n                    Attempts remaining: <span class=\"font-medium\">${otpConfig.attempts_limit - otpAttempts.value}</span> of ${otpConfig.attempts_limit}\n                </div>\n                ${otpAttempts.value > 0 ? `\n                <div class=\"text-xs text-red-500 mt-1\">\n                    ${otpConfig.attempts_limit - otpAttempts.value === 0 ? 'No attempts left. ' : ''}${otpAttempts.value} failed attempt${otpAttempts.value > 1 ? 's' : ''}.\n                </div>\n                ` : ''}\n            </div>\n        `,\n        showCancelButton: true,\n        confirmButtonText: 'Verify',\n        confirmButtonColor: '#10b981',\n        cancelButtonText: 'Cancel',\n        allowOutsideClick: false,\n        preConfirm: () => {\n            const otpInput = document.getElementById('swal-otp-input');\n            const otp = otpInput.value;\n\n            if (!otp || otp.length !== 6) {\n                Swal.showValidationMessage('Please enter the 6-digit verification code');\n                return false;\n            }\n\n            return otp;\n        },\n        didOpen: () => {\n            const resendBtn = document.getElementById('resend-otp-btn');\n            const resendCountdownEl = document.getElementById('resend-countdown');\n            const otpTimerEl = document.getElementById('otp-timer');\n            \n            // Update OTP timer every second\n            if (otpTimerEl) {\n                const updateTimerDisplay = () => {\n                    const { formatted: timeLeft, isExpired } = formatTimeRemaining(otpExpirationTime.value);\n                    otpTimerEl.textContent = timeLeft;\n                    \n                    // Change color to red when less than 1 minute remaining or expired\n                    if (timeLeft.startsWith('0:') || isExpired) {\n                        otpTimerEl.classList.add('text-red-500');\n                        otpTimerEl.classList.remove('text-gray-600');\n                    } else {\n                        otpTimerEl.classList.remove('text-red-500');\n                        otpTimerEl.classList.add('text-gray-600');\n                    }\n                    \n                    // If time's up, update display but keep the interval running\n                    if (isExpired) {\n                        otpTimerEl.textContent = 'expired';\n                        otpTimerEl.classList.add('font-bold');\n                    }\n                };\n                \n                // Initial update\n                updateTimerDisplay();\n                \n                // Set up interval for updates\n                otpTimerInterval = setInterval(updateTimerDisplay, 1000);\n            }\n\n            // Function to update the resend button state\n            const updateResendButton = () => {\n                if (isResendDisabled) {\n                    resendBtn.disabled = true;\n                    resendBtn.classList.remove('text-green-600', 'hover:text-green-800');\n                    resendBtn.classList.add('text-gray-400', 'cursor-not-allowed');\n                    resendCountdownEl.classList.remove('hidden');\n                    resendCountdownEl.textContent = `(${resendCountdown}s)`;\n                } else {\n                    resendBtn.disabled = false;\n                    resendBtn.classList.add('text-green-600', 'hover:text-green-800');\n                    resendBtn.classList.remove('text-gray-400', 'cursor-not-allowed');\n                    resendCountdownEl.classList.add('hidden');\n                }\n            };\n\n            // Add event listener for resend button\n            resendBtn.addEventListener('click', async () => {\n                if (!isResendDisabled) {\n                    try {\n                        await sendOtp(otpForm.field_to_verify, otpForm.new_value);\n                    } catch (error) {\n                        if (error.response?.data?.message?.includes('wait')) {\n                            // Extract the wait time or use the rate limit from config\n                            const timeMatch = error.response.data.message.match(/wait (\\d+) (?:seconds|second)/i);\n                            resendCountdown = timeMatch && timeMatch[1] \n                                ? parseInt(timeMatch[1]) \n                                : otpConfig.rate_limit;\n\n                            isResendDisabled = true;\n                            updateResendButton();\n\n                            // Start countdown\n                            countdownInterval = setInterval(() => {\n                                resendCountdown -= 1;\n                                updateResendButton();\n\n                                if (resendCountdown <= 0) {\n                                    clearInterval(countdownInterval);\n                                    isResendDisabled = false;\n                                    updateResendButton();\n                                }\n                            }, 1000);\n                        }\n                    }\n                }\n            });\n        },\n        willClose: () => {\n            // Clear any running intervals when the modal is closed\n            if (countdownInterval) {\n                clearInterval(countdownInterval);\n            }\n            cleanupOtpTimer();\n        },\n    }).then(async (result) => {\n        if (result.isConfirmed) {\n            await verifyOtp(result.value);\n        }\n    });\n};\n\n// Send OTP to verify contact information\nconst sendOtp = async (field, value) => {\n    try {\n        // Validate the field and value\n        if (!field || !value) {\n            showToast('error', 'Validation Error', `${field === 'email' ? 'Email' : 'Phone number'} is required for verification`);\n            return;\n        }\n\n        // Show loading state\n        Swal.fire({\n            title: 'Sending OTP',\n            text: `Please wait while we send an OTP to your ${field === 'email' ? 'email' : 'phone number'}...`,\n            allowOutsideClick: false,\n            didOpen: () => {\n                Swal.showLoading();\n            },\n        });\n\n        // Reset attempts counter and expiration time when requesting new OTP\n        otpAttempts.value = 0;\n        cleanupOtpTimer();\n        const expTime = new Date();\n        expTime.setSeconds(expTime.getSeconds() + otpConfig.ttl);\n        otpExpirationTime.value = expTime;\n\n        // Send OTP request\n        // Prepare payload based on field type\n        const payload = {};\n        \n        if (field === 'email') {\n            payload.email = value;\n        } else if (field === 'telephone') {\n            payload.telephone = value;\n        }\n        \n        const response = await axios.post(route('auth.request-otp'), payload);\n\n        if (response.data.status === 'success') {\n            // Update form with verification ID\n            otpForm.verification_id = response.data.verification_id;\n            otpForm.field_to_verify = field;\n            otpForm.new_value = value;\n            \n            // Show OTP verification modal\n            showOtpVerificationModal();\n        } else {\n            throw new Error(response.data.message || 'Failed to send OTP. Please try again.');\n        }\n    } catch (error) {\n        console.error('OTP send error:', error);\n\n        // Check if it's a rate limit error\n        if (error.response?.data?.message && error.response.data.message.includes('wait')) {\n            // Show countdown timer for rate limit\n            let secondsLeft = otpConfig.rate_limit; // Use the rate limit from config\n\n            // Try to extract the exact time from the message if available\n            const timeMatch = error.response.data.message.match(/wait (\\d+) (?:seconds|second)/i);\n            if (timeMatch && timeMatch[1]) {\n                secondsLeft = parseInt(timeMatch[1]);\n            }\n\n            const timerInterval = setInterval(() => {\n                secondsLeft -= 1;\n\n                // Update the timer text\n                const timerElement = document.getElementById('otp-timer');\n                if (timerElement) {\n                    timerElement.textContent = `${secondsLeft}`;\n                }\n\n                // When timer reaches zero\n                if (secondsLeft <= 0) {\n                    clearInterval(timerInterval);\n                    Swal.close();\n                }\n            }, 1000);\n\n            Swal.fire({\n                icon: 'warning',\n                title: 'Rate Limited',\n                html: `\n                    <p>You must wait before requesting another OTP.</p>\n                    <div class=\"mt-4 text-center\">\n                        <p>Try again in <span id=\"otp-timer\" class=\"font-bold text-lg\">${secondsLeft}</span> seconds</p>\n                    </div>\n                `,\n                showConfirmButton: true,\n                confirmButtonText: 'OK',\n                confirmButtonColor: '#10b981',\n                willClose: () => {\n                    clearInterval(timerInterval);\n                },\n            });\n        } else {\n            // Regular error handling\n            Swal.fire({\n                icon: 'error',\n                title: 'OTP Error',\n                text: error.response?.data?.message || 'Failed to send OTP. Please try again.',\n            });\n        }\n    }\n};\n\n// Verify OTP\nconst verifyOtp = async (otp) => {\n    // If OTP is expired, don't proceed with verification\n    if (otpExpirationTime.value && new Date() > otpExpirationTime.value) {\n        Swal.fire({\n            icon: 'error',\n            title: 'OTP Expired',\n            text: 'The verification code has expired. Please request a new one.',\n            confirmButtonColor: '#10b981',\n        });\n        return;\n    }\n    \n    // Check if max attempts reached\n    if (otpAttempts.value >= otpConfig.attempts_limit) {\n        Swal.fire({\n            icon: 'error',\n            title: 'Maximum Attempts Reached',\n            text: `You've exceeded the maximum number of verification attempts. Please request a new OTP.`,\n            confirmButtonColor: '#10b981',\n        });\n        return;\n    }\n\n    // Increment attempts counter\n    otpAttempts.value += 1;\n\n    try {\n        // Show loading state\n        Swal.fire({\n            title: 'Verifying OTP',\n            text: 'Please wait while we verify your OTP...',\n            allowOutsideClick: false,\n            didOpen: () => {\n                Swal.showLoading();\n            },\n        });\n\n        // Verify OTP request\n        const payload = {\n            otp: otp\n        };\n        \n        // Add either email or telephone based on what's being verified\n        if (otpForm.field_to_verify === 'email') {\n            payload.email = otpForm.new_value;\n        } else if (otpForm.field_to_verify === 'telephone') {\n            payload.telephone = otpForm.new_value;\n        }\n        \n        const response = await axios.post(route('auth.verify-otp'), payload);\n\n        if (response.data.status === 'success') {\n            // Reset attempts on successful verification\n            otpAttempts.value = 0;\n            \n            // Update the form field with the verified value\n            if (otpForm.field_to_verify === 'email') {\n                form.email = otpForm.new_value;\n                form.email_verified_at = new Date().toISOString();\n                // Clear any previous email verification errors\n                form.clearErrors('email');\n            } else if (otpForm.field_to_verify === 'telephone') {\n                form.telephone = otpForm.new_value;\n                form.telephone_verified_at = new Date().toISOString();\n                // Clear any previous telephone verification errors\n                form.clearErrors('telephone');\n            }\n            \n            // Close the modal and reset form\n            showOtpModal.value = false;\n            otpForm.reset();\n            cleanupOtpTimer();\n            \n            // Show success message\n            Swal.fire({\n                icon: 'success',\n                title: 'Verification Successful',\n                text: `Your ${otpForm.field_to_verify === 'email' ? 'email address' : 'telephone number'} has been verified successfully.`,\n                confirmButtonColor: '#10b981',\n            });\n            \n            // If we have a token in the response, update the authentication state\n            if (response.data.data?.accessToken) {\n                // Store the new token\n                window.localStorage.setItem('auth_token', response.data.data.accessToken);\n                \n                // Update axios default headers\n                axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.data.accessToken}`;\n                \n                // Refresh the user data\n                await router.reload({ only: ['user'] });\n            }\n            \n            // Submit the form if this was part of a form submission\n            if (shouldVerifyOnSubmit.value) {\n                shouldVerifyOnSubmit.value = false;\n                await updateProfileInformation();\n            }\n        } else {\n            throw new Error(response.data.message || 'Invalid OTP. Please try again.');\n        }\n    } catch (error) {\n        console.error('OTP verification error:', error);\n        \n        Swal.fire({\n            icon: 'error',\n            title: 'Verification Failed',\n            html: `\n                <p>${error.response?.data?.message || 'Failed to verify OTP. Please try again.'}</p>\n                ${error.response?.data?.message?.includes('attempts exceeded') \n                    ? `<p class=\"mt-2 text-sm\">You have exceeded the maximum of ${otpConfig.attempts_limit} attempts. Please request a new OTP.</p>` \n                    : ''}\n            `,\n            confirmButtonColor: '#10b981',\n        }).then(() => {\n            // Show OTP verification modal again if not max attempts\n            if (otpAttempts.value < otpConfig.attempts_limit) {\n                showOtpVerificationModal();\n            }\n        });\n    }\n};\n\n// Track if we're in the middle of verification flow\nconst shouldVerifyOnSubmit = ref(false);\n\n// Helper function to show toast messages\nconst showToast = (type, title, message) => {\n    Swal.fire({\n        toast: true,\n        position: 'top-end',\n        icon: type,\n        title: title,\n        text: message,\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n    });\n};\n\n// Watch for profile changes to update form data\nwatch(profile, (newProfile) => {\n    if (newProfile) {\n        // Update profile fields in form\n        Object.keys(newProfile).forEach(key => {\n            if (key in form.profile) {\n                form.profile[key] = newProfile[key];\n            }\n        });\n    }\n}, { immediate: true, deep: true });\n\n// Watch for citizen changes to update form data\nwatch(citizen, (newCitizen) => {\n    if (newCitizen && Object.keys(newCitizen).length > 0) {\n        // Update citizen fields in form\n        Object.keys(newCitizen).forEach(key => {\n            if (key in form.citizen) {\n                form.citizen[key] = newCitizen[key];\n            }\n        });\n    }\n}, { immediate: true, deep: true });\n\n// Watch for profile changes to update form\nwatch(profile, (newProfile) => {\n    if (newProfile) {\n        // Update profile fields\n        form.profile.surname = newProfile.last_name || null;\n        form.profile.other_name = (newProfile.first_name || '') + (newProfile.middle_name ? ` ${newProfile.middle_name}` : '');\n        form.profile.email = newProfile.email || user.value.email;\n        \n        // Format date_of_birth for HTML date input (YYYY-MM-DD)\n        const dob = newProfile.date_of_birth || null;\n        if (dob) {\n            const date = new Date(dob);\n            form.profile.date_of_birth = !isNaN(date.getTime()) ? date.toISOString().split('T')[0] : '';\n        } else {\n            form.profile.date_of_birth = '';\n        }\n\n        // Update other profile fields\n        form.profile.gender = newProfile.gender || null;\n        form.profile.ncpwd_number = newProfile.ncpwd_number || null;\n        form.profile.ethnicity_id = newProfile.ethnicity_id || null;\n        form.profile.religion_id = newProfile.religion_id || null;\n        form.profile.telephone = newProfile.telephone || null;\n        form.profile.address_line_1 = newProfile.address_line_1 || null;\n        form.profile.address_line_2 = newProfile.address_line_2 || null;\n        form.profile.city = newProfile.city || null;\n        form.profile.state = newProfile.state || null;\n        form.profile.country = newProfile.country || null;\n    }\n}, { immediate: true, deep: true });\n\n// Watch for citizen changes to update form\nwatch(citizen, (newCitizen) => {\n    if (newCitizen && Object.keys(newCitizen).length > 0) {\n        console.log('Updating citizen form data:', newCitizen);\n        \n        // Update citizen fields\n        form.citizen.national_identification_number = newCitizen.national_identification_number || null;\n        form.citizen.passport_number = newCitizen.passport_number || null;\n        form.citizen.driver_license_number = newCitizen.driver_license_number || null;\n        \n        // Update location fields\n        form.citizen.county_id = newCitizen.county_id || null;\n        form.citizen.sub_county_id = newCitizen.sub_county_id || null;\n        form.citizen.constituency_id = newCitizen.constituency_id || null;\n        form.citizen.ward_id = newCitizen.ward_id || null;\n        form.citizen.location_id = newCitizen.location_id || null;\n        form.citizen.village_id = newCitizen.village_id || null;\n        form.citizen.polling_center_id = newCitizen.polling_center_id || null;\n        form.citizen.polling_station_id = newCitizen.polling_station_id || null;\n        form.citizen.polling_stream_id = newCitizen.polling_stream_id || null;\n        \n        // Log the updated form data for debugging\n        console.log('Updated form.citizen:', form.citizen);\n    }\n}, { immediate: true, deep: true });\n\nconst verificationLinkSent = ref(null);\nconst photoPreview = ref(null);\nconst photoInput = ref(null);\n\n// Create a function to prepare form data\nconst prepareFormData = () => {\n    const formData = new FormData();\n    \n    // Add all profile fields to formData\n    if (form.profile) {\n        Object.keys(form.profile).forEach(key => {\n            // Skip photo here, we'll add it separately\n            if (key !== 'photo' && form.profile[key] !== null && form.profile[key] !== undefined) {\n                formData.append(`profile[${key}]`, form.profile[key]);\n            }\n        });\n    }\n    \n    // Add photo separately if it exists\n    if (photoInput.value?.files?.[0]) {\n        formData.append('profile[photo]', photoInput.value.files[0]);\n    }\n    \n    // Add all citizen fields to formData\n    if (form.citizen) {\n        Object.keys(form.citizen).forEach(key => {\n            if (form.citizen[key] !== null && form.citizen[key] !== undefined) {\n                formData.append(`citizen[${key}]`, form.citizen[key]);\n            }\n        });\n    }\n    \n    return formData;\n};\n\nconst updateProfileInformation = async (skipVerification = false) => {\n    // Check if we need to verify email or telephone\n    const emailChanged = user?.email && form.profile.email !== user.email;\n    const telephoneChanged = profile?.telephone && form.profile.telephone !== profile.telephone;\n    \n    // Only trigger OTP if:\n    // 1. We're not skipping verification\n    // 2. We're either in the middle of verification or there's a change in email/telephone\n    // 3. The field being changed had a previous value (not empty)\n    if (!skipVerification && (shouldVerifyOnSubmit.value || emailChanged || telephoneChanged)) {\n        shouldVerifyOnSubmit.value = true;\n        \n        // Determine which OTP to send and to where\n        let targetField = '';\n        let targetValue = '';\n        let message = '';\n        \n        if (telephoneChanged) {\n            targetField = 'telephone';\n            // Only verify if there was a previous telephone number\n            if (profile?.telephone) {\n                targetValue = profile.telephone; // Always use the old value for verification\n                message = `We'll send a verification code to your current number <strong>${profile.telephone}</strong> to confirm this change.`;\n            } else {\n                // No previous telephone, no verification needed for new number\n                shouldVerifyOnSubmit.value = false;\n            }\n        } else if (emailChanged && user?.email) {\n            // Only verify if there was a previous email\n            targetField = 'email';\n            targetValue = user.email; // Always use the old value for verification\n            message = `We'll send a verification code to <strong>${user.email}</strong> to confirm your email address change.`;\n        }\n        \n        if (targetField) {\n            try {\n                const result = await Swal.fire({\n                    title: 'Verify ' + (targetField === 'email' ? 'Email Address' : 'Phone Number'),\n                    html: message,\n                    icon: 'info',\n                    showCancelButton: true,\n                    confirmButtonText: 'Send Verification Code',\n                    cancelButtonText: 'Cancel',\n                    reverseButtons: true,\n                    customClass: {\n                        confirmButton: 'px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700',\n                        cancelButton: 'px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300'\n                    },\n                    buttonsStyling: false\n                });\n\n                if (result.isConfirmed) {\n                    await sendOtp(targetField, targetValue);\n                } else if (result.isDismissed) {\n                    // User cancelled the verification\n                    shouldVerifyOnSubmit.value = false;\n                }\n                return;\n            } catch (error) {\n                console.error('Error in verification flow:', error);\n                showToast('error', 'Verification Error', 'An error occurred while setting up verification. Please try again.');\n                shouldVerifyOnSubmit.value = false;\n                return;\n            }\n        }\n    }\n\n    // Log the form data being sent\n    console.log('Form data being submitted:', JSON.stringify(form.data(), null, 2));\n    \n    // Use Inertia's form helper which handles file uploads and CSRF automatically\n    form.transform((data) => {\n        console.log('Transformed form data:', JSON.stringify(data, null, 2));\n        return {\n            ...data,\n            _method: 'PUT' // Laravel's way to handle PUT/PATCH/DELETE via POST\n        };\n    }).post(route('user-profile-information.update'), {\n        onStart: () => {\n            console.log('Form submission started');\n            form.processing = true;\n        },\n        onFinish: () => {\n            console.log('Form submission finished');\n            form.processing = false;\n        },\n        onSuccess: (page) => {\n            console.log('Profile update successful', page);\n            // Clear the photo input on success\n            clearPhotoFileInput();\n            \n            // Show success message\n            showToast('success', 'Success', 'Profile updated successfully!');\n            \n            // Refresh the page to show updated profile\n            window.location.reload();\n        },\n        onError: (errors) => {\n            console.error('Detailed error updating profile:', {\n                errors,\n                response: errors?.response,\n                data: errors?.response?.data,\n                status: errors?.response?.status,\n                statusText: errors?.response?.statusText\n            });\n            \n            // Extract the first error message if available\n            let errorMessage = 'Failed to update profile. Please check the form for errors.';\n            \n            // Handle different error response formats\n            if (errors && typeof errors === 'object') {\n                // Check for Laravel validation errors\n                if (errors.updateProfileInformation) {\n                    const errorObj = errors.updateProfileInformation;\n                    const firstErrorKey = Object.keys(errorObj)[0];\n                    if (firstErrorKey) {\n                        errorMessage = Array.isArray(errorObj[firstErrorKey]) \n                            ? errorObj[firstErrorKey][0] \n                            : String(errorObj[firstErrorKey]);\n                    }\n                } \n                // Handle Inertia form errors\n                else if (Object.keys(errors).length > 0) {\n                    const firstError = Object.values(errors)[0];\n                    errorMessage = Array.isArray(firstError) ? firstError[0] : String(firstError);\n                }\n            }\n            \n            showToast('error', 'Error', errorMessage);\n        },\n        preserveScroll: true,\n        forceFormData: true, // Important for file uploads\n        onCancelToken: (cancelToken) => {\n            console.log('Request cancel token created');\n        },\n        onCancel: () => {\n            console.log('Request was cancelled');\n        }\n    });\n};\n\nconst sendEmailVerification = () => {\n    verificationLinkSent.value = true;\n};\n\nconst selectNewPhoto = () => {\n    photoInput.value.click();\n};\n\nconst updatePhotoPreview = () => {\n    const photo = photoInput.value.files[0];\n    \n    if (!photo) return;\n    \n    // Validate file type\n    if (!photo.type.match('image.*')) {\n        Swal.fire({\n            icon: 'error',\n            title: 'Invalid File Type',\n            text: 'Please select an image file (JPEG, PNG, GIF, etc.)',\n            confirmButtonColor: '#10b981',\n        });\n        clearPhotoFileInput();\n        return;\n    }\n    \n    // Validate file size (max 5MB)\n    const maxSize = 5 * 1024 * 1024; // 5MB\n    if (photo.size > maxSize) {\n        Swal.fire({\n            icon: 'error',\n            title: 'File Too Large',\n            text: 'Maximum file size is 5MB. Please choose a smaller file.',\n            confirmButtonColor: '#10b981',\n        });\n        clearPhotoFileInput();\n        return;\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n        photoPreview.value = e.target.result;\n        // Update the form with the new photo\n        if (form.profile) {\n            form.profile.photo = photo;\n        }\n    };\n\n    reader.readAsDataURL(photo);\n};\n\nconst deletePhoto = () => {\n    router.delete(route(\"current-user-photo.destroy\"), {\n        preserveScroll: true,\n        onSuccess: () => {\n            photoPreview.value = null;\n            clearPhotoFileInput();\n        },\n    });\n};\n\nconst clearPhotoFileInput = () => {\n    if (photoInput.value?.value) {\n        photoInput.value.value = null;\n    }\n};\n\nconst activeSection = ref(\"personal\");\n\n// Location data refs\nconst constituencies = ref([]);\nconst wards = ref([]);\nconst locations = ref([]);\nconst villages = ref([]);\nconst pollingCenters = ref([]);\nconst pollingStations = ref([]);\nconst pollingStreams = ref([]);\n\n// Loading states for location dropdowns\nconst isLoadingSubCounties = ref(false);\nconst isLoadingConstituencies = ref(false);\nconst isLoadingWards = ref(false);\nconst isLoadingLocations = ref(false);\nconst isLoadingVillages = ref(false);\nconst isLoadingPollingCenters = ref(false);\nconst isLoadingPollingStations = ref(false);\nconst isLoadingPollingStreams = ref(false);\n\n// Access location data from page props\nconst locationData = computed(() => {\n    const data = pageProps.formData?.locations || {\n        counties: [],\n        sub_counties: [],\n        constituencies: [],\n        wards: [],\n        locations: [],\n        villages: [],\n        polling_centers: [],\n        polling_stations: [],\n        polling_streams: []\n    };\n    \n    return data;\n});\n\n// Reactive references for filtered location data\nconst filteredSubCounties = ref([]);\nconst filteredConstituencies = ref([]);\nconst filteredWards = ref([]);\nconst filteredLocations = ref([]);\nconst filteredVillages = ref([]);\nconst filteredPollingCenters = ref([]);\nconst filteredPollingStations = ref([]);\nconst filteredPollingStreams = ref([]);\n\n// Watcher for county changes\nwatch(() => form.citizen.county_id, (newCountyId) => {\n    if (!newCountyId) {\n        filteredSubCounties.value = [];\n        filteredConstituencies.value = [];\n        // Reset only county-dependent fields\n        form.citizen.sub_county_id = '';\n        form.citizen.constituency_id = '';\n        return;\n    }\n    \n    // Filter sub-counties for the selected county\n    filteredSubCounties.value = locationData.value.sub_counties?.filter(\n        subCounty => subCounty.county_id == newCountyId\n    ) || [];\n    \n    // Filter constituencies for the selected county\n    filteredConstituencies.value = locationData.value.constituencies?.filter(\n        constituency => constituency.county_id == newCountyId\n    ) || [];\n    \n    // Reset only county-dependent fields\n    form.citizen.sub_county_id = '';\n    form.citizen.constituency_id = '';\n});\n\n// Watcher for constituency changes\nwatch(() => form.citizen.constituency_id, (newConstituencyId) => {\n    if (!newConstituencyId) {\n        filteredWards.value = [];\n        // Reset only constituency-dependent fields\n        form.citizen.ward_id = '';\n        return;\n    }\n    \n    filteredWards.value = locationData.value.wards?.filter(\n        ward => ward.constituency_id == newConstituencyId\n    ) || [];\n    \n    // Reset only constituency-dependent fields\n    form.citizen.ward_id = '';\n});\n\n// Watcher for ward changes\nwatch(() => form.citizen.ward_id, (newWardId) => {\n    if (!newWardId) {\n        filteredLocations.value = [];\n        filteredPollingCenters.value = [];\n        // Reset only ward-dependent fields\n        form.citizen.location_id = '';\n        form.citizen.polling_center_id = '';\n        return;\n    }\n    \n    // Filter locations for the selected ward\n    filteredLocations.value = locationData.value.locations?.filter(\n        location => location.ward_id == newWardId\n    ) || [];\n    \n    // Filter polling centers for the selected ward\n    filteredPollingCenters.value = locationData.value.polling_centers?.filter(\n        center => center.ward_id == newWardId\n    ) || [];\n    \n    // Reset only ward-dependent fields\n    form.citizen.location_id = '';\n    form.citizen.polling_center_id = '';\n});\n\n// Watcher for location changes\nwatch(() => form.citizen.location_id, (newLocationId) => {\n    if (!newLocationId) {\n        filteredVillages.value = [];\n        // Reset only location-dependent fields\n        form.citizen.village_id = '';\n        return;\n    }\n    \n    filteredVillages.value = locationData.value.villages?.filter(\n        village => village.location_id == newLocationId\n    ) || [];\n    \n    // Reset only location-dependent fields\n    form.citizen.village_id = '';\n});\n\n// Watcher for polling center changes\nwatch(() => form.citizen.polling_center_id, (newCenterId) => {\n    if (!newCenterId) {\n        filteredPollingStations.value = [];\n        // Reset only polling-center-dependent fields\n        form.citizen.polling_station_id = '';\n        return;\n    }\n    \n    filteredPollingStations.value = locationData.value.polling_stations?.filter(\n        station => station.center_id == newCenterId\n    ) || [];\n    \n    // Reset only polling-center-dependent fields\n    form.citizen.polling_station_id = '';\n});\n\n// Watcher for polling station changes\nwatch(() => form.citizen.polling_station_id, (newStationId) => {\n    if (!newStationId) {\n        filteredPollingStreams.value = [];\n        // Reset only polling-station-dependent fields\n        form.citizen.polling_stream_id = '';\n        return;\n    }\n    \n    filteredPollingStreams.value = locationData.value.polling_streams?.filter(\n        stream => stream.station_id == newStationId\n    ) || [];\n    \n    // Reset only polling-station-dependent fields\n    form.citizen.polling_stream_id = '';\n});\n\n\n\n// Watchers to clear child fields when parent changes\nwatch(() => form.citizen.county_id, () => {\n    form.citizen.sub_county_id = '';\n    form.citizen.constituency_id = '';\n    form.citizen.ward_id = '';\n    form.citizen.location_id = '';\n    form.citizen.village_id = '';\n    form.citizen.polling_center_id = '';\n    form.citizen.polling_station_id = '';\n    form.citizen.polling_stream_id = '';\n});\n\nwatch(() => form.citizen.constituency_id, () => {\n    form.citizen.ward_id = '';\n    form.citizen.location_id = '';\n    form.citizen.village_id = '';\n    form.citizen.polling_center_id = '';\n    form.citizen.polling_station_id = '';\n    form.citizen.polling_stream_id = '';\n});\n\nwatch(() => form.citizen.ward_id, () => {\n    form.citizen.location_id = '';\n    form.citizen.village_id = '';\n    form.citizen.polling_center_id = '';\n    form.citizen.polling_station_id = '';\n    form.citizen.polling_stream_id = '';\n});\n\nwatch(() => form.citizen.location_id, () => {\n    form.citizen.village_id = '';\n});\n\nwatch(() => form.citizen.polling_center_id, () => {\n    form.citizen.polling_station_id = '';\n    form.citizen.polling_stream_id = '';\n});\n\nwatch(() => form.citizen.polling_station_id, () => {\n    form.citizen.polling_stream_id = '';\n});\n\n// Watch for county changes to filter sub-counties and reset dependent fields\nwatch(\n    () => form.citizen.county_id,\n    (newCountyId) => {\n        // Reset dependent fields\n        form.citizen.sub_county_id = '';\n        form.citizen.constituency_id = '';\n        form.citizen.ward_id = '';\n        form.citizen.location_id = '';\n        form.citizen.village_id = '';\n        form.citizen.polling_center_id = '';\n        form.citizen.polling_station_id = '';\n        form.polling_stream_id = '';\n    }\n);\n\n// Watch for sub-county changes to reset dependent fields\nwatch(\n    () => form.citizen.sub_county_id,\n    (newSubCountyId) => {\n        if (newSubCountyId) {\n            // Reset dependent fields if needed\n            form.citizen.ward_id = '';\n            form.citizen.location_id = '';\n            form.citizen.village_id = '';\n            form.citizen.polling_center_id = '';\n            form.citizen.polling_station_id = '';\n            form.citizen.polling_stream_id = '';\n        }\n    }\n);\n\n// Watch for constituency changes to reset dependent fields\nwatch(\n    () => form.citizen.constituency_id,\n    (newConstituencyId) => {\n        // Reset dependent fields\n        form.citizen.ward_id = '';\n        form.citizen.location_id = '';\n        form.citizen.village_id = '';\n        form.citizen.polling_center_id = '';\n        form.citizen.polling_station_id = '';\n        form.citizen.polling_stream_id = '';\n    }\n);\n\n// Watch for ward changes to reset dependent fields\nwatch(\n    () => form.citizen.ward_id,\n    (newWardId) => {\n        // Reset dependent fields\n        form.citizen.location_id = '';\n        form.citizen.village_id = '';\n        form.citizen.polling_center_id = '';\n        form.citizen.polling_station_id = '';\n        form.citizen.polling_stream_id = '';\n    }\n);\n\n// Watch for location changes to reset village field\nwatch(\n    () => form.citizen.location_id,\n    (newLocationId) => {\n        if (newLocationId) {\n            form.citizen.village_id = '';\n        }\n    }\n);\n\n// Watch for polling center changes to reset dependent fields\nwatch(\n    () => form.citizen.polling_center_id,\n    (newCenterId) => {\n        form.citizen.polling_station_id = '';\n        form.citizen.polling_stream_id = '';\n    }\n);\n\n// Watch for polling station changes to reset polling stream\nwatch(\n    () => form.citizen.polling_station_id,\n    (newStationId) => {\n        if (newStationId) {\n            form.citizen.polling_stream_id = '';\n        }\n    }\n);\n\nconst toggleSection = (section) => {\n    activeSection.value = activeSection.value === section ? null : section;\n};\n</script>\n\n<template>\n    <FormSection @submitted=\"updateProfileInformation\">\n        <template #title> Profile Information </template>\n\n        <template #description>\n            Update your personal, contact, and identification information.\n            Ensure all details are accurate and up-to-date.\n        </template>\n\n        <template #form>\n            <!-- Profile Photo -->\n            <div\n                v-if=\"$page.props.jetstream.managesProfilePhotos\"\n                class=\"col-span-6 sm:col-span-4\"\n            >\n                <!-- Profile Photo File Input -->\n                <input\n                    id=\"photo\"\n                    ref=\"photoInput\"\n                    type=\"file\"\n                    class=\"hidden\"\n                    @change=\"updatePhotoPreview\"\n                />\n\n                <InputLabel for=\"photo\" value=\"Profile Image\" />\n\n                <!-- Current Profile Photo -->\n                <div v-show=\"!photoPreview\" class=\"mt-2\">\n                    <img\n                        :src=\"user.profile_photo_path\"\n                        :alt=\"user.name\"\n                        class=\"rounded-full size-20 object-cover\"\n                    />\n                </div>\n\n                <!-- New Profile Photo Preview -->\n                <div v-show=\"photoPreview\" class=\"mt-2\">\n                    <span\n                        class=\"block rounded-full size-20 bg-cover bg-no-repeat bg-center\"\n                        :style=\"\n                            'background-image: url(\\'' + photoPreview + '\\');'\n                        \"\n                    />\n                </div>\n\n                <SecondaryButton\n                    class=\"mt-2 me-2\"\n                    type=\"button\"\n                    @click.prevent=\"selectNewPhoto\"\n                >\n                    Select A New Photo\n                </SecondaryButton>\n\n                <SecondaryButton\n                    v-if=\"user.profile_photo_path\"\n                    type=\"button\"\n                    class=\"mt-2\"\n                    @click.prevent=\"deletePhoto\"\n                >\n                    Remove Photo\n                </SecondaryButton>\n\n                <InputError :message=\"form.errors.photo\" class=\"mt-2\" />\n            </div>\n\n            <!-- Collapsible Sections -->\n            <div class=\"col-span-6 space-y-4\">\n                <!-- Personal Information Section -->\n                <div\n                    class=\"border rounded-lg overflow-hidden dark:border-gray-700\"\n                >\n                    <button\n                        type=\"button\"\n                        @click=\"toggleSection('personal')\"\n                        class=\"w-full px-6 py-4 text-left font-medium text-gray-900 dark:text-gray-100 bg-gray-50 dark:bg-gray-800 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 flex justify-between items-center\"\n                    >\n                        <span>Personal Information</span>\n                        <svg\n                            class=\"w-5 h-5 transition-transform duration-200\"\n                            :class=\"{\n                                'rotate-180': activeSection === 'personal',\n                            }\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            viewBox=\"0 0 24 24\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                                stroke-width=\"2\"\n                                d=\"M19 9l-7 7-7-7\"\n                            ></path>\n                        </svg>\n                    </button>\n                    <div\n                        v-show=\"activeSection === 'personal'\"\n                        class=\"p-6 bg-white dark:bg-gray-900\"\n                    >\n                        <div class=\"grid grid-cols-6 gap-6\">\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"surname\">\n                                    Surname\n                                    <i\n                                        class=\"fas fa-star text-red-500 text-xs ml-1\"\n                                    ></i>\n                                </InputLabel>\n                                <TextInput\n                                    id=\"surname\"\n                                    v-model=\"form.profile.surname\"\n                                    type=\"text\"\n                                    class=\"mt-1 block w-full\"\n                                    placeholder=\"Enter your surname\"\n                                    required\n                                    autocomplete=\"family-name\"\n                                />\n                                <InputError\n                                    :message=\"form.errors.surname\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"other_name\">\n                                    Other Name\n                                    <i\n                                        class=\"fas fa-star text-red-500 text-xs ml-1\"\n                                    ></i>\n                                </InputLabel>\n                                <TextInput\n                                    id=\"other_name\"\n                                    v-model=\"form.profile.other_name\"\n                                    type=\"text\"\n                                    class=\"mt-1 block w-full\"\n                                    placeholder=\"Enter your other names\"\n                                    required\n                                    autocomplete=\"given-name\"\n                                />\n                                <InputError\n                                    :message=\"form.errors['profile.other_name']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"date_of_birth\">\n                                    Date of Birth\n                                    <i\n                                        class=\"fas fa-star text-red-500 text-xs ml-1\"\n                                    ></i>\n                                </InputLabel>\n                                <TextInput\n                                    id=\"date_of_birth\"\n                                    v-model=\"form.profile.date_of_birth\"\n                                    type=\"date\"\n                                    class=\"mt-1 block w-full\"\n                                    :max=\"new Date().toISOString().split('T')[0]\"\n                                    required\n                                />\n                                <InputError\n                                    :message=\"form.errors['profile.date_of_birth']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"gender\">\n                                    Gender\n                                    <i\n                                        class=\"fas fa-star text-red-500 text-xs ml-1\"\n                                    ></i>\n                                </InputLabel>\n                                <select\n                                    id=\"gender\"\n                                    v-model=\"form.profile.gender\"\n                                    class=\"mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm\"\n                                    required\n                                >\n                                    <option value=\"\">Select Gender</option>\n                                    <option\n                                        v-for=\"gender in $page.props.formData\n                                            .genders\"\n                                        :key=\"gender.id\"\n                                        :value=\"gender.id\"\n                                        :selected=\"user.profile?.gender === gender.id\"\n                                    >\n                                        {{ gender.name }}\n                                    </option>\n                                </select>\n                                <InputError\n                                    :message=\"form.errors.gender\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"ethnicity_id\">\n                                    Ethnicity\n                                    <i\n                                        class=\"fas fa-star text-red-500 text-xs ml-1\"\n                                    ></i>\n                                </InputLabel>\n                                <select\n                                    id=\"ethnicity_id\"\n                                    v-model=\"form.profile.ethnicity_id\"\n                                    class=\"mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm\"\n                                    required\n                                >\n                                    <option value=\"\">Select Ethnicity</option>\n                                    <option\n                                        v-for=\"ethnicity in $page.props.formData\n                                            .ethnicities\"\n                                        :key=\"ethnicity.id\"\n                                        :value=\"ethnicity.id\"\n                                        :selected=\"user.profile?.ethnicity_id === ethnicity.id\"\n                                    >\n                                        {{ ethnicity.name }}\n                                    </option>\n                                </select>\n                                <InputError\n                                    :message=\"form.errors.ethnicity_id\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"religion_id\">\n                                    Religion\n                                    <i\n                                        class=\"fas fa-star text-red-500 text-xs ml-1\"\n                                    ></i>\n                                </InputLabel>\n                                <select\n                                    id=\"religion_id\"\n                                    v-model=\"form.profile.religion_id\"\n                                    class=\"mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm\"\n                                    required\n                                >\n                                    <option value=\"\">Select Religion</option>\n                                    <option\n                                        v-for=\"religion in $page.props.formData\n                                            .religions\"\n                                        :key=\"religion.id\"\n                                        :value=\"religion.id\"\n                                        :selected=\"user.profile?.religion_id === religion.id\"\n                                    >\n                                        {{ religion.name }}\n                                    </option>\n                                </select>\n                                <InputError\n                                    :message=\"form.errors.religion_id\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Identification Information Section -->\n                <div\n                    class=\"border rounded-lg overflow-hidden dark:border-gray-700\"\n                >\n                    <button\n                        type=\"button\"\n                        @click=\"toggleSection('identification')\"\n                        class=\"w-full px-6 py-4 text-left font-medium text-gray-900 dark:text-gray-100 bg-gray-50 dark:bg-gray-800 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 flex justify-between items-center\"\n                    >\n                        <span>Identification Information</span>\n                        <svg\n                            class=\"w-5 h-5 transition-transform duration-200\"\n                            :class=\"{\n                                'rotate-180':\n                                    activeSection === 'identification',\n                            }\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            viewBox=\"0 0 24 24\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                                stroke-width=\"2\"\n                                d=\"M19 9l-7 7-7-7\"\n                            ></path>\n                        </svg>\n                    </button>\n                    <div\n                        v-show=\"activeSection === 'identification'\"\n                        class=\"p-6 bg-white dark:bg-gray-900\"\n                    >\n                        <div class=\"grid grid-cols-6 gap-6\">\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel\n                                    for=\"national_identification_number\"\n                                >\n                                    National Identification Number\n                                    <i\n                                        class=\"fas fa-star text-red-500 text-xs ml-1\"\n                                    ></i>\n                                    <span\n                                        class=\"text-xs text-gray-500 font-normal\"\n                                        >(or Passport Number)</span\n                                    >\n                                </InputLabel>\n                                <TextInput\n                                    id=\"national_identification_number\"\n                                    v-model=\"\n                                        form.citizen.national_identification_number\n                                    \"\n                                    type=\"text\"\n                                    class=\"mt-1 block w-full\"\n                                    placeholder=\"e.g., 12345678\"\n                                    :required=\"!form.citizen.passport_number\"\n                                    autocomplete=\"off\"\n                                />\n                                <InputError\n                                    :message=\"\n                                        form.errors['citizen.national_identification_number']\n                                    \"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"passport_number\">\n                                    Passport Number\n                                    <i\n                                        class=\"fas fa-star text-red-500 text-xs ml-1\"\n                                    ></i>\n                                    <span\n                                        class=\"text-xs text-gray-500 font-normal\"\n                                        >(or National Identification\n                                        Number)</span\n                                    >\n                                </InputLabel>\n                                <TextInput\n                                    id=\"passport_number\"\n                                    v-model=\"form.citizen.passport_number\"\n                                    type=\"text\"\n                                    class=\"mt-1 block w-full\"\n                                    placeholder=\"e.g., A1234567\"\n                                    :required=\"!form.citizen.national_identification_number\"\n                                    autocomplete=\"off\"\n                                />\n                                <InputError\n                                    :message=\"form.errors['citizen.passport_number']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"membership_number\">\n                                    Membership Number\n                                    <i\n                                        class=\"fas fa-star text-red-500 text-xs ml-1\"\n                                    ></i>\n                                </InputLabel>\n                                <TextInput\n                                    id=\"membership_number\"\n                                    v-model=\"form.citizen.uuid\"\n                                    type=\"text\"\n                                    class=\"mt-1 block w-full bg-gray-200 text-gray-500 rounded-md border border-gray-300 py-2 px-3 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm opacity-50\"\n                                    placeholder=\"e.g., FKP-2345678\"\n                                    :required=\"true\"\n                                    readonly\n                                    autocomplete=\"off\"\n                                />\n                                <InputError\n                                    :message=\"form.errors['citizen.uuid']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"ncpwd_number\">\n                                    NCPWD Number\n                                    <span\n                                        class=\"text-xs text-gray-500 font-normal\"\n                                        >(if Applicable)</span\n                                    >\n                                </InputLabel>\n                                <TextInput\n                                    id=\"ncpwd_number\"\n                                    v-model=\"form.profile.ncpwd_number\"\n                                    type=\"text\"\n                                    class=\"mt-1 block w-full\"\n                                    placeholder=\"e.g., NCPWD/1234/5678\"\n                                />\n                                <InputError\n                                    :message=\"form.errors.ncpwd_number\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Contact Information Section -->\n                <div\n                    class=\"border rounded-lg overflow-hidden dark:border-gray-700\"\n                >\n                    <button\n                        type=\"button\"\n                        @click=\"toggleSection('contact')\"\n                        class=\"w-full px-6 py-4 text-left font-medium text-gray-900 dark:text-gray-100 bg-gray-50 dark:bg-gray-800 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 flex justify-between items-center\"\n                    >\n                        <span>Contact Information</span>\n                        <svg\n                            class=\"w-5 h-5 transition-transform duration-200\"\n                            :class=\"{\n                                'rotate-180': activeSection === 'contact',\n                            }\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            viewBox=\"0 0 24 24\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                                stroke-width=\"2\"\n                                d=\"M19 9l-7 7-7-7\"\n                            ></path>\n                        </svg>\n                    </button>\n                    <div\n                        v-show=\"activeSection === 'contact'\"\n                        class=\"p-6 bg-white dark:bg-gray-900\"\n                    >\n                        <div class=\"grid grid-cols-6 gap-6\">\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"email\">\n                                    Email Address\n                                    <span\n                                        class=\"text-xs text-gray-500 font-normal\"\n                                        >(Optional)</span\n                                    >\n                                </InputLabel>\n                                <TextInput\n                                    id=\"email\"\n                                    v-model=\"form.profile.email\"\n                                    type=\"email\"\n                                    class=\"mt-1 block w-full\"\n                                    placeholder=\"your.email@example.com\"\n                                    autocomplete=\"email\"\n                                />\n                                <InputError\n                                    :message=\"form.errors['profile.email']\"\n                                    class=\"mt-2\"\n                                />\n\n                                <div\n                                    v-if=\"\n                                        $page.props.jetstream\n                                            .hasEmailVerification &&\n                                        user.email_verified_at === null\n                                    \"\n                                    class=\"mt-2\"\n                                >\n                                    <p\n                                        class=\"text-xs text-gray-600 dark:text-gray-400\"\n                                    >\n                                        Your email is unverified.\n                                        <Link\n                                            :href=\"route('verification.send')\"\n                                            method=\"post\"\n                                            as=\"button\"\n                                            class=\"underline text-xs hover:text-gray-900 dark:hover:text-gray-200\"\n                                            @click.prevent=\"\n                                                sendEmailVerification\n                                            \"\n                                        >\n                                            Resend verification\n                                        </Link>\n                                    </p>\n                                    <div\n                                        v-show=\"verificationLinkSent\"\n                                        class=\"text-xs text-green-600 dark:text-green-400 mt-1\"\n                                    >\n                                        Verification link sent!\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"telephone\">\n                                    Telephone Number\n                                    <i\n                                        class=\"fas fa-star text-red-500 text-xs ml-1\"\n                                    ></i>\n                                </InputLabel>\n                                <input\n                                    id=\"telephone\"\n                                    name=\"telephone\"\n                                    v-model=\"form.profile.telephone\"\n                                    type=\"tel\"\n                                    class=\"border-gray-300 focus:border-green-500 focus:ring-green-500 rounded-md shadow-sm mt-1 block w-full\"\n                                    placeholder=\"e.g., 0712345678\"\n                                    required\n                                    @input=\"formatPhoneNumber\"\n                                />\n                                <InputError\n                                    :message=\"form.errors['profile.telephone']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n\n                            <div class=\"col-span-6\">\n                                <InputLabel for=\"address_line_1\">\n                                    Address Line 1\n                                    <span\n                                        class=\"text-xs text-gray-500 font-normal\"\n                                        >(Optional)</span\n                                    >\n                                </InputLabel>\n                                <TextInput\n                                    id=\"address_line_1\"\n                                    v-model=\"form.profile.address_line_1\"\n                                    type=\"text\"\n                                    class=\"mt-1 block w-full\"\n                                    placeholder=\"e.g., 123 Main Street\"\n                                />\n                                <InputError\n                                    :message=\"form.errors['profile.address_line_1']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n\n                            <div class=\"col-span-6\">\n                                <InputLabel for=\"address_line_2\">\n                                    Address Line 2\n                                    <span\n                                        class=\"text-xs text-gray-500 font-normal\"\n                                        >(Optional)</span\n                                    >\n                                </InputLabel>\n                                <TextInput\n                                    id=\"address_line_2\"\n                                    v-model=\"form.profile.address_line_2\"\n                                    type=\"text\"\n                                    class=\"mt-1 block w-full\"\n                                    placeholder=\"e.g., Apartment, suite, etc. (optional)\"\n                                />\n                                <InputError\n                                    :message=\"form.errors['profile.address_line_2']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n\n                            <div class=\"col-span-6 sm:col-span-2\">\n                                <InputLabel for=\"city\">\n                                    City\n                                    <span\n                                        class=\"text-xs text-gray-500 font-normal\"\n                                        >(Optional)</span\n                                    >\n                                </InputLabel>\n                                <TextInput\n                                    id=\"city\"\n                                    v-model=\"form.profile.city\"\n                                    type=\"text\"\n                                    class=\"mt-1 block w-full\"\n                                    placeholder=\"e.g., Nairobi\"\n                                />\n                                <InputError\n                                    :message=\"form.errors['profile.city']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n\n                            <div class=\"col-span-6 sm:col-span-2\">\n                                <InputLabel for=\"state\">\n                                    State/Province\n                                    <span\n                                        class=\"text-xs text-gray-500 font-normal\"\n                                        >(Optional)</span\n                                    >\n                                </InputLabel>\n                                <TextInput\n                                    id=\"state\"\n                                    v-model=\"form.profile.state\"\n                                    type=\"text\"\n                                    class=\"mt-1 block w-full\"\n                                    placeholder=\"e.g., Nairobi\"\n                                />\n                                <InputError\n                                    :message=\"form.errors['profile.state']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n\n                            <div class=\"col-span-6 sm:col-span-2\">\n                                <InputLabel for=\"country\">\n                                    Country\n                                    <span\n                                        class=\"text-xs text-gray-500 font-normal\"\n                                        >(Optional)</span\n                                    >\n                                </InputLabel>\n                                <TextInput\n                                    id=\"country\"\n                                    v-model=\"form.profile.country\"\n                                    type=\"text\"\n                                    class=\"mt-1 block w-full bg-gray-100 dark:bg-gray-800 cursor-not-allowed\"\n                                    placeholder=\"e.g., Kenya\"\n                                />\n                                <InputError\n                                    :message=\"form.errors['profile.country']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Location Information Section -->\n                <div\n                    class=\"border rounded-lg overflow-hidden dark:border-gray-700\"\n                >\n                    <button\n                        type=\"button\"\n                        @click=\"toggleSection('location')\"\n                        class=\"w-full px-6 py-4 text-left font-medium text-gray-900 dark:text-gray-100 bg-gray-50 dark:bg-gray-800 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 flex justify-between items-center\"\n                    >\n                        <span>Voting Location Information</span>\n                        <svg\n                            class=\"w-5 h-5 transition-transform duration-200\"\n                            :class=\"{\n                                'rotate-180': activeSection === 'location',\n                            }\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            viewBox=\"0 0 24 24\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                                stroke-width=\"2\"\n                                d=\"M19 9l-7 7-7-7\"\n                            ></path>\n                        </svg>\n                    </button>\n                    <div\n                        v-show=\"activeSection === 'location'\"\n                        class=\"p-6 bg-white dark:bg-gray-900\"\n                    >\n                        <div class=\"grid grid-cols-6 gap-6\">\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"county_id\">\n                                    County\n                                    <i\n                                        class=\"fas fa-star text-red-500 text-xs ml-1\"\n                                    ></i>\n                                </InputLabel>\n                                <select\n                                    id=\"county_id\"\n                                    v-model=\"form.citizen.county_id\"\n                                    class=\"mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm\"\n                                    required\n                                >\n                                    <option value=\"\">Select County</option>\n                                    <option\n                                        v-for=\"county in $page.props.formData.locations.counties\"\n                                        :key=\"county.id\"\n                                        :value=\"county.id\"\n                                    >\n                                        {{ county.name }}\n                                    </option>\n                                </select>\n                                <InputError\n                                    :message=\"form.errors['citizen.county_id']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"sub_county_id\">\n                                    Sub County\n                                    <i\n                                        class=\"fas fa-star text-red-500 text-xs ml-1\"\n                                    ></i>\n                                </InputLabel>\n                                <div class=\"relative\">\n                                    <select\n                                        id=\"sub_county_id\"\n                                        v-model=\"form.citizen.sub_county_id\"\n                                        class=\"mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm\"\n                                        :disabled=\"!form.citizen.county_id || isLoadingSubCounties\"\n                                    >\n                                        <option value=\"\">Select Sub County</option>\n                                        <!-- Show current sub-county first if it exists -->\n                                        <option \n                                            v-if=\"citizen?.sub_county && citizen.sub_county.county_id == form.citizen.county_id\"\n                                            :value=\"citizen.sub_county_id\"\n                                            :key=\"'current-subcounty-' + citizen.sub_county_id\"\n                                        >\n                                            {{ citizen.sub_county.name }}\n                                        </option>\n                                        <!-- Then show other filtered sub-counties -->\n                                        <option\n                                            v-for=\"sub_county in filteredSubCounties\"\n                                            :key=\"sub_county.id\"\n                                            :value=\"sub_county.id\"\n                                            :disabled=\"citizen?.sub_county_id === sub_county.id\"\n                                        >\n                                            {{ sub_county.name }}\n                                        </option>\n                                    </select>\n                                    <div v-if=\"isLoadingSubCounties\" class=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n                                        <svg class=\"animate-spin h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                                            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                                        </svg>\n                                    </div>\n                                </div>\n                                <InputError\n                                    :message=\"form.errors['citizen.sub_county_id']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"constituency_id\">\n                                    Constituency\n                                    <i\n                                        class=\"fas fa-star text-red-500 text-xs ml-1\"\n                                    ></i>\n                                </InputLabel>\n                                <div class=\"relative\">\n                                    <select\n                                        id=\"constituency_id\"\n                                        v-model=\"form.citizen.constituency_id\"\n                                        class=\"mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm\"\n                                        :disabled=\"!form.citizen.county_id\"\n                                        required\n                                    >\n                                        <option value=\"\">Select Constituency</option>\n                                        <!-- Show current constituency first if it exists -->\n                                        <option \n                                            v-if=\"citizen?.constituency && citizen.constituency.county_id == form.citizen.county_id\"\n                                            :value=\"citizen.constituency_id\"\n                                            :key=\"'current-constituency-' + citizen.constituency_id\"\n                                        >\n                                            {{ citizen.constituency.name }}\n                                        </option>\n                                        <!-- Then show other filtered constituencies -->\n                                        <option\n                                            v-for=\"constituency in filteredConstituencies\"\n                                            :key=\"constituency.id\"\n                                            :value=\"constituency.id\"\n                                            :disabled=\"citizen?.constituency_id === constituency.id\"\n                                        >\n                                            {{ constituency.name }}\n                                        </option>\n                                    </select>\n                                </div>\n                                <InputError\n                                    :message=\"form.errors['citizen.constituency_id']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"ward_id\">\n                                    Ward\n                                    <i\n                                        class=\"fas fa-star text-red-500 text-xs ml-1\"\n                                    ></i>\n                                </InputLabel>\n                                <div class=\"relative\">\n                                    <select\n                                        id=\"ward_id\"\n                                        v-model=\"form.citizen.ward_id\"\n                                        class=\"mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm\"\n                                        :disabled=\"!form.citizen.constituency_id || isLoadingWards\"\n                                        required\n                                    >\n                                        <option value=\"\">Select Ward</option>\n                                        <!-- Show current ward first if it exists -->\n                                        <option \n                                            v-if=\"citizen?.ward && citizen.ward.constituency_id == form.citizen.constituency_id\"\n                                            :value=\"citizen.ward_id\"\n                                            :key=\"'current-ward-' + citizen.ward_id\"\n                                        >\n                                            {{ citizen.ward.name }}\n                                        </option>\n                                        <!-- Then show other filtered wards -->\n                                        <option\n                                            v-for=\"ward in filteredWards\"\n                                            :key=\"ward.id\"\n                                            :value=\"ward.id\"\n                                            :disabled=\"citizen?.ward_id === ward.id\"\n                                        >\n                                            {{ ward.name }}\n                                        </option>\n                                    </select>\n                                    <div v-if=\"isLoadingWards\" class=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n                                        <svg class=\"animate-spin h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                                            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                                        </svg>\n                                    </div>\n                                </div>\n                                <InputError\n                                    :message=\"form.errors['citizen.ward_id']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"location_id\">\n                                    Location\n                                </InputLabel>\n                                <div class=\"relative\">\n                                    <select\n                                        id=\"location_id\"\n                                        v-model=\"form.citizen.location_id\"\n                                        class=\"mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm\"\n                                        :disabled=\"!form.citizen.ward_id || isLoadingLocations\"\n                                    >\n                                        <option value=\"\">Select Location</option>\n                                        <!-- Show current location first if it exists -->\n                                        <option \n                                            v-if=\"citizen?.location && citizen.location.ward_id == form.citizen.ward_id\"\n                                            :value=\"citizen.location_id\"\n                                            :key=\"'current-location-' + citizen.location_id\"\n                                        >\n                                            {{ citizen.location.name }}\n                                        </option>\n                                        <!-- Then show other filtered locations -->\n                                        <option\n                                            v-for=\"location in filteredLocations\"\n                                            :key=\"location.id\"\n                                            :value=\"location.id\"\n                                            :disabled=\"citizen?.location_id === location.id\"\n                                        >\n                                            {{ location.name }}\n                                        </option>\n                                    </select>\n                                    <div v-if=\"isLoadingLocations\" class=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n                                        <svg class=\"animate-spin h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                                            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                                        </svg>\n                                    </div>\n                                </div>\n                                <InputError\n                                    :message=\"form.errors['citizen.location_id']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"village_id\">\n                                    Village\n                                </InputLabel>\n                                <div class=\"relative\">\n                                    <select\n                                        id=\"village_id\"\n                                        v-model=\"form.citizen.village_id\"\n                                        class=\"mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm\"\n                                        :disabled=\"!form.citizen.location_id || isLoadingVillages\"\n                                    >\n                                        <option value=\"\">Select Village</option>\n                                        <!-- Show current village first if it exists -->\n                                        <option \n                                            v-if=\"citizen?.village && citizen.village.location_id == form.citizen.location_id\"\n                                            :value=\"citizen.village_id\"\n                                            :key=\"'current-village-' + citizen.village_id\"\n                                        >\n                                            {{ citizen.village.name }}\n                                        </option>\n                                        <!-- Then show other filtered villages -->\n                                        <option\n                                            v-for=\"village in filteredVillages\"\n                                            :key=\"village.id\"\n                                            :value=\"village.id\"\n                                            :disabled=\"citizen?.village_id === village.id\"\n                                        >\n                                            {{ village.name }}\n                                        </option>\n                                    </select>\n                                    <div v-if=\"isLoadingVillages\" class=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n                                        <svg class=\"animate-spin h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                                            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                                        </svg>\n                                    </div>\n                                </div>\n                                <InputError\n                                    :message=\"form.errors['citizen.village_id']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"polling_center_id\">\n                                    Polling Center\n                                </InputLabel>\n                                <div class=\"relative\">\n                                    <select\n                                        id=\"polling_center_id\"\n                                        v-model=\"form.citizen.polling_center_id\"\n                                        class=\"mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm\"\n                                        :disabled=\"!form.citizen.ward_id || isLoadingPollingCenters\"\n    \n                                    >\n                                        <option value=\"\">\n                                            Select Polling Center\n                                        </option>\n                                        <!-- Show current polling center first if it exists -->\n                                        <option \n                                            v-if=\"citizen?.polling_center && citizen.polling_center.ward_id == form.citizen.ward_id\"\n                                            :value=\"citizen.polling_center_id\"\n                                            :key=\"'current-center-' + citizen.polling_center_id\"\n                                        >\n                                            {{ citizen.polling_center.name }}\n                                        </option>\n                                        <!-- Then show other filtered polling centers -->\n                                        <option\n                                            v-for=\"center in filteredPollingCenters\"\n                                            :key=\"center.id\"\n                                            :value=\"center.id\"\n                                            :disabled=\"citizen?.polling_center_id === center.id\"\n                                        >\n                                            {{ center.name }}\n                                        </option>\n                                    </select>\n                                    <div v-if=\"isLoadingPollingCenters\" class=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n                                        <svg class=\"animate-spin h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                                            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                                        </svg>\n                                    </div>\n                                </div>\n                                <InputError\n                                    :message=\"form.errors['citizen.polling_center_id']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"polling_station_id\">\n                                    Polling Station\n                                </InputLabel>\n                                <div class=\"relative\">\n                                    <select\n                                        id=\"polling_station_id\"\n                                        v-model=\"form.citizen.polling_station_id\"\n                                        class=\"mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm\"\n                                        :disabled=\"!form.citizen.polling_center_id || isLoadingPollingStations\"\n    \n                                    >\n                                        <option value=\"\">\n                                            Select Polling Station\n                                        </option>\n                                        <!-- Show current polling station first if it exists -->\n                                        <option \n                                            v-if=\"citizen?.polling_station && citizen.polling_station.polling_center_id == form.citizen.polling_center_id\"\n                                            :value=\"citizen.polling_station_id\"\n                                            :key=\"'current-station-' + citizen.polling_station_id\"\n                                        >\n                                            {{ citizen.polling_station.name }}\n                                        </option>\n                                        <!-- Then show other filtered polling stations -->\n                                        <option\n                                            v-for=\"station in filteredPollingStations\"\n                                            :key=\"station.id\"\n                                            :value=\"station.id\"\n                                            :disabled=\"citizen?.polling_station_id === station.id\"\n                                        >\n                                            {{ station.name }}\n                                        </option>\n                                    </select>\n                                    <div v-if=\"isLoadingPollingStations\" class=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n                                        <svg class=\"animate-spin h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                                            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                                        </svg>\n                                    </div>\n                                </div>\n                                <InputError\n                                    :message=\"form.errors['citizen.polling_station_id']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n\n                            <div class=\"col-span-6 sm:col-span-3\">\n                                <InputLabel for=\"polling_stream_id\">\n                                    Polling Stream\n                                </InputLabel>\n                                <div class=\"relative\">\n                                    <select\n                                        id=\"polling_stream_id\"\n                                        v-model=\"form.citizen.polling_stream_id\"\n                                        class=\"mt-1 block w-full border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-300 focus:border-indigo-500 dark:focus:border-indigo-600 focus:ring-indigo-500 dark:focus:ring-indigo-600 rounded-md shadow-sm\"\n                                        :disabled=\"!form.citizen.polling_station_id || isLoadingPollingStreams\"\n    \n                                    >\n                                        <option value=\"\">\n                                            Select Polling Stream\n                                        </option>\n                                        <!-- Show current polling stream first if it exists -->\n                                        <option \n                                            v-if=\"citizen?.polling_stream && citizen.polling_stream.polling_station_id == form.citizen.polling_station_id\"\n                                            :value=\"citizen.polling_stream_id\"\n                                            :key=\"'current-stream-' + citizen.polling_stream_id\"\n                                        >\n                                            {{ citizen.polling_stream.name }}\n                                        </option>\n                                        <!-- Then show other filtered polling streams -->\n                                        <option\n                                            v-for=\"stream in filteredPollingStreams\"\n                                            :key=\"stream.id\"\n                                            :value=\"stream.id\"\n                                            :disabled=\"citizen?.polling_stream_id === stream.id\"\n                                        >\n                                            {{ stream.name }}\n                                        </option>\n                                    </select>\n                                    <div v-if=\"isLoadingPollingStreams\" class=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n                                        <svg class=\"animate-spin h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                                            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                                        </svg>\n                                    </div>\n                                </div>\n                                <InputError\n                                    :message=\"form.errors['citizen.polling_stream_id']\"\n                                    class=\"mt-2\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </template>\n\n        <template #actions>\n            <ActionMessage :on=\"form.recentlySuccessful\" class=\"me-3\">\n                Saved.\n            </ActionMessage>\n\n            <PrimaryButton\n                :class=\"{ 'opacity-25': form.processing }\"\n                :disabled=\"form.processing\"\n            >\n                Save\n            </PrimaryButton>\n        </template>\n    </FormSection>\n\n    <!-- OTP Verification Modal -->\n    <div v-if=\"showOtpModal\" class=\"fixed z-50 inset-0 overflow-y-auto\" aria-labelledby=\"otp-modal-title\" role=\"dialog\" aria-modal=\"true\">\n        <div class=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n            <!-- Background overlay -->\n            <div \n                class=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" \n                aria-hidden=\"true\" \n                @click.self=\"showOtpModal = false\"\n            ></div>\n\n            <!-- Modal panel -->\n            <div class=\"inline-block align-bottom bg-white dark:bg-gray-800 rounded-lg px-6 pt-5 pb-6 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-md sm:w-full sm:p-8 relative\">\n                <!-- Close button -->\n                <button \n                    type=\"button\" \n                    @click=\"showOtpModal = false\"\n                    class=\"absolute top-4 right-4 text-gray-400 hover:text-gray-500 dark:text-gray-300 dark:hover:text-gray-200 focus:outline-none\"\n                    :disabled=\"otpVerificationInProgress\"\n                >\n                    <span class=\"sr-only\">Close</span>\n                    <svg class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                </button>\n\n                <div class=\"sm:flex sm:items-start\">\n                    <!-- Icon container -->\n                    <div class=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-indigo-100 dark:bg-indigo-900 sm:mx-0 sm:h-10 sm:w-10\">\n                        <svg class=\"h-6 w-6 text-indigo-600 dark:text-indigo-300\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                        </svg>\n                    </div>\n                    \n                    <!-- Modal content -->\n                    <div class=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full\">\n                        <h3 class=\"text-lg leading-6 font-medium text-gray-900 dark:text-gray-100\" id=\"otp-modal-title\">\n                            Verify {{ otpForm.field_to_verify === 'email' ? 'Email Address' : 'Phone Number' }}\n                        </h3>\n                        \n                        <div class=\"mt-4\">\n                            <p class=\"text-sm text-gray-600 dark:text-gray-300\">\n                                We've sent a 6-digit verification code to:\n                                <span class=\"block font-medium text-gray-900 dark:text-white mt-1\">\n                                    {{ otpForm.field_to_verify === 'email' ? form.email : formatPhoneNumberForDisplay(otpForm.new_value) }}\n                                </span>\n                            </p>\n                            \n                            <!-- OTP Input -->\n                            <div class=\"mt-6\">\n                                <label for=\"otp\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                    Enter verification code\n                                </label>\n                                <div class=\"flex justify-between space-x-3\">\n                                    <input\n                                        v-for=\"i in 6\"\n                                        :key=\"i\"\n                                        v-model=\"otpDigits[i-1]\"\n                                        @input=\"onOtpInput($event, i-1)\"\n                                        @keydown.delete=\"onOtpKeyDown($event, i-1)\"\n                                        @paste.prevent=\"onOtpPaste($event)\"\n                                        type=\"tel\"\n                                        maxlength=\"1\"\n                                        pattern=\"[0-9]\"\n                                        inputmode=\"numeric\"\n                                        autocomplete=\"one-time-code\"\n                                        :disabled=\"otpVerificationInProgress\"\n                                        class=\"w-full h-14 text-2xl text-center font-semibold text-gray-900 dark:text-white bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 disabled:opacity-50\"\n                                        :class=\"{ 'border-red-500': otpError }\"\n                                    />\n                                </div>\n                                \n                                <!-- Error message -->\n                                <p v-if=\"otpError\" class=\"mt-2 text-sm text-red-600 dark:text-red-400\">\n                                    {{ otpError }}\n                                </p>\n                                \n                                <!-- Resend code section -->\n                                <div class=\"mt-4 text-center\">\n                                    <p v-if=\"!otpResendEnabled\" class=\"text-sm text-gray-500 dark:text-gray-400\">\n                                        Didn't receive a code? Resend in \n                                        <span class=\"font-medium\">{{ Math.floor(otpCountdown / 60) }}:{{ (otpCountdown % 60).toString().padStart(2, '0') }}</span>\n                                    </p>\n                                    <button\n                                        v-else\n                                        type=\"button\"\n                                        class=\"text-sm font-medium text-indigo-600 hover:text-indigo-500 dark:text-indigo-400 dark:hover:text-indigo-300 focus:outline-none disabled:opacity-50\"\n                                        @click=\"resendOtp\"\n                                        :disabled=\"!otpResendEnabled || otpVerificationInProgress\"\n                                    >\n                                        Resend code\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <!-- Action buttons -->\n                <div class=\"mt-6 sm:mt-8 sm:flex sm:flex-row-reverse\">\n                    <button\n                        type=\"button\"\n                        class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-3 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:ml-3 sm:w-auto sm:text-sm transition-colors duration-150\"\n                        :class=\"{ 'opacity-75 cursor-not-allowed': otpDigits.join('').length !== 6 || otpVerificationInProgress }\"\n                        @click=\"verifyOtp(otpDigits.join(''))\"\n                        :disabled=\"otpDigits.join('').length !== 6 || otpVerificationInProgress\"\n                    >\n                        <span v-if=\"!otpVerificationInProgress\">Verify Now</span>\n                        <span v-else class=\"flex items-center\">\n                            <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                            </svg>\n                            Verifying...\n                        </span>\n                    </button>\n                    <button\n                        type=\"button\"\n                        class=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 dark:border-gray-600 shadow-sm px-4 py-3 bg-white dark:bg-gray-700 text-base font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm transition-colors duration-150\"\n                        @click=\"showOtpModal = false\"\n                        :disabled=\"otpVerificationInProgress\"\n                    >\n                        Cancel\n                    </button>\n                </div>\n                \n                <!-- Help text -->\n                <div class=\"mt-4 text-center\">\n                    <p class=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Having trouble? Contact support at \n                        <a href=\"mailto:support@forwardkenyaparty.com\" class=\"text-indigo-600 dark:text-indigo-400 hover:underline\">support@forwardkenyaparty.com</a>\n                        or call +254 700 000 000\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n"],"names":["pageProps","usePage","user","computed","_a","profile","citizen","form","useForm","value","otpConfig","otpAttempts","ref","otpExpirationTime","otpTimerInterval","otpVerificationInProgress","showOtpModal","otpForm","formatTimeRemaining","endTime","diffInSeconds","minutes","seconds","formatPhoneNumber","event","cleanupOtpTimer","showOtpVerificationModal","isResendDisabled","resendCountdown","countdownInterval","expTime","Swal","otp","resendBtn","resendCountdownEl","otpTimerEl","updateTimerDisplay","timeLeft","isExpired","updateResendButton","sendOtp","error","_c","_b","timeMatch","result","verifyOtp","field","showToast","payload","response","secondsLeft","timerInterval","timerElement","_d","router","shouldVerifyOnSubmit","updateProfileInformation","_f","_e","type","title","message","watch","newProfile","key","newCitizen","dob","date","verificationLinkSent","photoPreview","photoInput","skipVerification","emailChanged","telephoneChanged","targetField","targetValue","data","page","clearPhotoFileInput","errors","errorMessage","errorObj","firstErrorKey","firstError","cancelToken","sendEmailVerification","selectNewPhoto","updatePhotoPreview","photo","maxSize","reader","e","deletePhoto","activeSection","isLoadingSubCounties","isLoadingWards","isLoadingLocations","isLoadingVillages","isLoadingPollingCenters","isLoadingPollingStations","isLoadingPollingStreams","locationData","filteredSubCounties","filteredConstituencies","filteredWards","filteredLocations","filteredVillages","filteredPollingCenters","filteredPollingStations","filteredPollingStreams","newCountyId","subCounty","constituency","newConstituencyId","ward","newWardId","location","center","newLocationId","village","newCenterId","station","newStationId","stream","newSubCountyId","toggleSection","section","_createVNode","FormSection","_cache","$page","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","InputLabel","_withDirectives","_hoisted_2","_hoisted_4","_normalizeStyle","SecondaryButton","_createBlock","InputError","_unref","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","TextInput","$event","_hoisted_10","_hoisted_11","_hoisted_12","_Fragment","_renderList","gender","_toDisplayString","_hoisted_13","_hoisted_14","ethnicity","_hoisted_15","_hoisted_16","religion","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","Link","route","_withModifiers","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","county","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_46","sub_county","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_75","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","_g","_hoisted_81","_hoisted_82","_hoisted_83","_hoisted_84","_hoisted_85","_h","_hoisted_87","_hoisted_88","_hoisted_89","ActionMessage","PrimaryButton","_normalizeClass","_hoisted_90","_hoisted_91","_hoisted_92","_hoisted_94","_hoisted_95","_hoisted_96","_hoisted_97","_hoisted_98","_hoisted_99","formatPhoneNumberForDisplay","_hoisted_100","_hoisted_101","i","otpDigits","onOtpInput","_withKeys","onOtpKeyDown","onOtpPaste","otpError","_hoisted_103","_hoisted_104","otpResendEnabled","_ctx","args","_hoisted_107","_hoisted_105","_hoisted_106","otpCountdown","_hoisted_108","_hoisted_111","_hoisted_112"],"mappings":"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"}