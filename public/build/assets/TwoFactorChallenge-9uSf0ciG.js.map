{"version":3,"file":"TwoFactorChallenge-9uSf0ciG.js","sources":["../../../resources/js/Pages/Auth/TwoFactorChallenge.vue"],"sourcesContent":["<script setup>\nimport { nextTick, ref } from 'vue';\nimport { Head, useForm } from '@inertiajs/vue3';\nimport AuthenticationCard from '@/Components/AuthenticationCard.vue';\nimport AuthenticationCardLogo from '@/Components/AuthenticationCardLogo.vue';\nimport InputError from '@/Components/InputError.vue';\nimport InputLabel from '@/Components/InputLabel.vue';\nimport PrimaryButton from '@/Components/PrimaryButton.vue';\nimport TextInput from '@/Components/TextInput.vue';\n\nconst recovery = ref(false);\n\nconst form = useForm({\n    code: '',\n    recovery_code: '',\n});\n\nconst recoveryCodeInput = ref(null);\nconst codeInput = ref(null);\n\nconst toggleRecovery = async () => {\n    recovery.value ^= true;\n\n    await nextTick();\n\n    if (recovery.value) {\n        recoveryCodeInput.value.focus();\n        form.code = '';\n    } else {\n        codeInput.value.focus();\n        form.recovery_code = '';\n    }\n};\n\nconst submit = () => {\n    form.post(route('two-factor.login'));\n};\n</script>\n\n<template>\n    <Head title=\"Two-factor Confirmation\" />\n\n    <AuthenticationCard>\n        <template #logo>\n            <AuthenticationCardLogo />\n        </template>\n\n        <div class=\"mb-4 text-sm text-gray-600\">\n            <template v-if=\"! recovery\">\n                Please confirm access to your account by entering the authentication code provided by your authenticator application.\n            </template>\n\n            <template v-else>\n                Please confirm access to your account by entering one of your emergency recovery codes.\n            </template>\n        </div>\n\n        <form @submit.prevent=\"submit\">\n            <div v-if=\"! recovery\">\n                <InputLabel for=\"code\" value=\"Code\" />\n                <TextInput\n                    id=\"code\"\n                    ref=\"codeInput\"\n                    v-model=\"form.code\"\n                    type=\"text\"\n                    inputmode=\"numeric\"\n                    class=\"mt-1 block w-full\"\n                    autofocus\n                    autocomplete=\"one-time-code\"\n                />\n                <InputError class=\"mt-2\" :message=\"form.errors.code\" />\n            </div>\n\n            <div v-else>\n                <InputLabel for=\"recovery_code\" value=\"Recovery Code\" />\n                <TextInput\n                    id=\"recovery_code\"\n                    ref=\"recoveryCodeInput\"\n                    v-model=\"form.recovery_code\"\n                    type=\"text\"\n                    class=\"mt-1 block w-full\"\n                    autocomplete=\"one-time-code\"\n                />\n                <InputError class=\"mt-2\" :message=\"form.errors.recovery_code\" />\n            </div>\n\n            <div class=\"flex items-center justify-end mt-4\">\n                <button type=\"button\" class=\"text-sm text-gray-600 hover:text-gray-900 underline cursor-pointer\" @click.prevent=\"toggleRecovery\">\n                    <template v-if=\"! recovery\">\n                        Use a recovery code\n                    </template>\n\n                    <template v-else>\n                        Use an authentication code\n                    </template>\n                </button>\n\n                <PrimaryButton class=\"ms-4\" :class=\"{ 'opacity-25': form.processing }\" :disabled=\"form.processing\">\n                    Log in\n                </PrimaryButton>\n            </div>\n        </form>\n    </AuthenticationCard>\n</template>\n"],"names":["recovery","ref","form","useForm","recoveryCodeInput","codeInput","toggleRecovery","nextTick","submit","_createVNode","_unref","Head","AuthenticationCard","AuthenticationCardLogo","_createElementVNode","_hoisted_1","_createElementBlock","_Fragment","_hoisted_3","InputLabel","TextInput","_cache","$event","InputError","_hoisted_2","_hoisted_4","PrimaryButton","_normalizeClass"],"mappings":"0kBAUA,MAAMA,EAAWC,EAAI,EAAK,EAEpBC,EAAOC,EAAQ,CACjB,KAAM,GACN,cAAe,EACnB,CAAC,EAEKC,EAAoBH,EAAI,IAAI,EAC5BI,EAAYJ,EAAI,IAAI,EAEpBK,EAAiB,SAAY,CAC/BN,EAAS,OAAS,GAElB,MAAMO,EAAQ,EAEVP,EAAS,OACTI,EAAkB,MAAM,MAAK,EAC7BF,EAAK,KAAO,KAEZG,EAAU,MAAM,MAAK,EACrBH,EAAK,cAAgB,GAE7B,EAEMM,EAAS,IAAM,CACjBN,EAAK,KAAK,MAAM,kBAAkB,CAAC,CACvC,8BAIIO,EAAwCC,EAAAC,CAAA,EAAA,CAAlC,MAAM,yBAAyB,CAAA,EAErCF,EA4DqBG,EAAA,KAAA,CA3DN,OACP,IAA0B,CAA1BH,EAA0BI,CAAA,cAG9B,IAQM,CARNC,EAQM,MARNC,EAQM,CAPgBf,EAAA,WAIlBgB,EAEWC,EAAA,CAAA,IAAA,CAAA,EAAA,GAFM,2FAEjB,aANAD,EAEWC,EAAA,CAAA,IAAA,CAAA,EAAA,GAFiB,yHAE5B,UAOJH,EA4CO,OAAA,CA5CA,WAAgBN,EAAM,CAAA,SAAA,CAAA,IACZR,EAAA,WAebgB,EAWM,MAAAE,EAAA,CAVFT,EAAwDU,EAAA,CAA5C,IAAI,gBAAgB,MAAM,kBACtCV,EAOEW,EAAA,CANE,GAAG,wBACC,oBAAJ,IAAIhB,EACK,WAAAM,EAAAR,CAAA,EAAK,cAAL,sBAAAmB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAAZ,EAAAR,CAAA,EAAK,cAAaoB,GAC3B,KAAK,OACL,MAAM,oBACN,aAAa,wCAEjBb,EAAgEc,EAAA,CAApD,MAAM,OAAQ,QAASb,EAAAR,CAAA,EAAK,OAAO,2CAzBnDc,EAaM,MAAAQ,EAAA,CAZFf,EAAsCU,EAAA,CAA1B,IAAI,OAAO,MAAM,SAC7BV,EASEW,EAAA,CARE,GAAG,eACC,YAAJ,IAAIf,EACK,WAAAK,EAAAR,CAAA,EAAK,KAAL,sBAAAmB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAAZ,EAAAR,CAAA,EAAK,KAAIoB,GAClB,KAAK,OACL,UAAU,UACV,MAAM,oBACN,UAAA,GACA,aAAa,wCAEjBb,EAAuDc,EAAA,CAA3C,MAAM,OAAQ,QAASb,EAAAR,CAAA,EAAK,OAAO,6BAgBnDY,EAcM,MAdNW,EAcM,CAbFX,EAQS,SAAA,CARD,KAAK,SAAS,MAAM,qEAAsE,UAAeR,EAAc,CAAA,SAAA,CAAA,IACzGN,EAAA,WAIlBgB,EAEWC,EAAA,CAAA,IAAA,CAAA,EAAA,GAFM,8BAEjB,aANAD,EAEWC,EAAA,CAAA,IAAA,CAAA,EAAA,GAFiB,uBAE5B,UAOJR,EAEgBiB,EAAA,CAFD,MAAKC,EAAA,CAAC,OAAM,CAAA,aAAyBjB,EAAAR,CAAA,EAAK,UAAU,CAAA,CAAA,EAAK,SAAUQ,EAAAR,CAAA,EAAK,uBAAY,IAEnGmB,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,GAFmG,UAEnG"}